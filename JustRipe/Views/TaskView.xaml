<UserControl x:Class="JustRipe.Views.TaskView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="600">

   <!--<UserControl.InputBindings>
        <KeyBinding Key="Return" Command="{Binding AddUpdateTaskCommand}" />
    </UserControl.InputBindings>-->
   <StackPanel>
      <DataGrid x:Name="gridTask" Margin="5" Padding="10" Height="380"
                  ItemsSource="{Binding TaskTable, Mode=TwoWay}" 
                  SelectedItem="{Binding SelectedTask, Mode=TwoWay}"
                  AutoGenerateColumns="False" >
         <DataGrid.Columns>
            <DataGridTextColumn Header="ID" Binding="{Binding Path=Id}"/>
            <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}"/>
            <DataGridTextColumn Header="Task Date" Binding="{Binding Path=TaskDate}"/>
            <DataGridTextColumn Header="Crop Name" Binding="{Binding Path=CropName}"/>
            <DataGridTextColumn Header="Created By" Binding="{Binding Path=CreatedBy}"/>
            <DataGridTextColumn Header="Type" Binding="{Binding Path=Type}"/>
            <DataGridTextColumn Header="Labour Needed" Binding="{Binding Path=LabourNeeded}"/>
            <DataGridTemplateColumn Header="">
               <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                     <Button Width="20" Height="20" Margin="0"
                                Command="{Binding Path=DataContext.EditTaskCommand, 
                                RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}"
                                Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" >
                        <materialDesign:PackIcon Kind="Pencil" Height="10" Width="10" />
                     </Button>
                  </DataTemplate>
               </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn Header="">
               <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                     <Button Width="20" Height="20"  Margin="0"
                                Command="{Binding Path=DataContext.DeleteTaskCommand, 
                                RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}"
                                Style="{StaticResource MaterialDesignFloatingActionMiniButton}" >
                        <materialDesign:PackIcon Kind="Close" Height="10" Width="10" />
                        <Button.Background>
                           <SolidColorBrush Color="{StaticResource RedPrimary700}" />
                        </Button.Background>
                     </Button>
                  </DataTemplate>
               </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
         </DataGrid.Columns>
      </DataGrid>

      <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth4" Padding="10">
         <Grid>
            <Grid.ColumnDefinitions>
               <ColumnDefinition Width="*"/>
               <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
               <RowDefinition Height="*"/>
               <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Column="0">

               <TextBox x:Name="Id"  Visibility="Collapsed" Margin="10 5" Text="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

               <TextBox x:Name="Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  Margin="10 5" materialDesign:HintAssist.Hint="Name" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

               <TextBox   x:Name="CropId" Visibility="Collapsed" Margin="10 5" materialDesign:HintAssist.Hint="CropId" Text="{Binding CropId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

               <ComboBox x:Name="CropCombo"  Margin="10 5" HorizontalAlignment="Left"  IsEditable="True"
                        Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.Hint="Crop" ItemsSource="{Binding CropList}" DisplayMemberPath="Name"
                        SelectedValue="{Binding CropId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Id"/>

               <TextBox x:Name="UserId" Visibility="Collapsed" Margin="10 5"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="UserId" Text="{Binding UserId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

               <ComboBox x:Name="CreatedBy"  Margin="10 5" HorizontalAlignment="Left"  IsEditable="True"
                        Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.Hint="User" ItemsSource="{Binding UserList}" DisplayMemberPath="FullName"
                        SelectedValue="{Binding UserId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Id"/>

            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Left" Width="500" >

               <DatePicker x:Name="TaskDate"  materialDesign:HintAssist.Hint="Task Date"  Margin="10 5" Style="{StaticResource MaterialDesignFloatingHintDatePicker}"  Text="{Binding TaskDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

               <TextBox x:Name="Type"  Margin="10 5" materialDesign:HintAssist.Hint="Type"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

               <TextBox x:Name="LabourNeeded"  Margin="10 5" materialDesign:HintAssist.Hint="Labour Needed"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding LabourNeeded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            </StackPanel>

            <StackPanel Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal">

               <Button Margin="10 10" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Command="{Binding AddUpdateTaskCommand}" IsDefault="True" >
                  <materialDesign:PackIcon Kind="Tick" Height="24" Width="24" />
               </Button>
               <Button Margin="10 10" Command="{Binding DeleteTaskCommand}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" ToolTip="MaterialDesignFloatingActionDarkButton">
                  <materialDesign:PackIcon Kind="Delete" Height="24" Width="24" />
               </Button>

            </StackPanel>
         </Grid>
      </materialDesign:Card>
   </StackPanel>
</UserControl>