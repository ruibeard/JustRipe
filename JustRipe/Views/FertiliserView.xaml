<UserControl x:Class="JustRipe.Views.FertiliserView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:JustRipe.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
            >
    <StackPanel >

        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Margin="30 5">
        </StackPanel>

      <DataGrid x:Name="gridStock" Margin="5" Padding="10" MaxHeight="380"
                  ItemsSource="{Binding FertiliserTable , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                  SelectedItem="{Binding SelectedProduct, Mode=TwoWay}" AutoGenerateColumns="false" CanUserAddRows="False">


            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Path=Id}"/>
                <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}"/>
                <DataGridTextColumn Header="Description" Binding="{Binding Path=Description}"/>
                <DataGridTextColumn Header="Category" Binding="{Binding Path=CategoryName}"/>
                <!--<DataGridTextColumn Header="Price" Binding="{Binding Path=Price}"/>-->
                <DataGridTextColumn Header="Quantity" Binding="{Binding Path=Quantity}"/>
                <DataGridTextColumn Header="Unit" Binding="{Binding Path=Unit}"/>
            <DataGridTemplateColumn Header="">
               <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                     <Button Width="20" Height="20" Margin="0"
                                Command="{Binding Path=DataContext.AddUpdateProductCommand, 
                                RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}"
                                Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" >
                        <materialDesign:PackIcon Kind="Pencil" Height="10" Width="10" />
                     </Button>
                  </DataTemplate>
               </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn Header="">
               <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                     <Button Width="20" Height="20"  Margin="0"
                                Command="{Binding Path=DataContext.DeleteProductCommand, 
                                RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}"
                                Style="{StaticResource MaterialDesignFloatingActionMiniButton}" >
                        <materialDesign:PackIcon Kind="Close" Height="10" Width="10" />
                        <Button.Background>
                           <SolidColorBrush Color="{StaticResource RedPrimary700}" />
                        </Button.Background>
                     </Button>
                  </DataTemplate>
               </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
         </DataGrid.Columns>
        </DataGrid>

      <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth4" Padding="42" Visibility="{Binding FormVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                <TextBox x:Name="Id" Visibility="Collapsed" Width="120"  Margin="10 0" materialDesign:HintAssist.Hint="Id" Text="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox x:Name="Name" Width="120"  Margin="10 0" materialDesign:HintAssist.Hint="Name" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox x:Name="Description" Width="120"  Margin="10 0" materialDesign:HintAssist.Hint="Description" Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox x:Name="CategoryName" Width="120"  Margin="10 0" materialDesign:HintAssist.Hint="CategoryName" Text="{Binding CategoryName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox x:Name="Quantity" Width="120"  Margin="10 0" materialDesign:HintAssist.Hint="Quantity" Text="{Binding Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox x:Name="Unit" Width="120"  Margin="10 0" materialDesign:HintAssist.Hint="Unit" Text="{Binding Unit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <!--<TextBox x:Name="Price" Width="120"  Margin="10 0" materialDesign:HintAssist.Hint="Price" Text="{Binding Price, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->
            <Button Margin="10 0" IsDefault="True" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Command="{Binding AddUpdateProductCommand}" >
                    <materialDesign:PackIcon Kind="Tick" Height="24" Width="24" />
                </Button>
            <Button  Command="{Binding DeleteProductCommand}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" ToolTip="MaterialDesignFloatingActionDarkButton">
                    <materialDesign:PackIcon Kind="Delete" Height="24" Width="24" />
                </Button>
            </StackPanel>
        </materialDesign:Card>
    </StackPanel>
</UserControl>