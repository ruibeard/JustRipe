<UserControl x:Class="JustRipe.Views.ContainerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:JustRipe.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
            >
   <StackPanel>

      <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Margin="30 5">
         <TextBlock Text="Show all crops:" Margin="5 0"/>
         <!--<ToggleButton Command="{Binding ShowAllContainersToogleCommand}" Style="{StaticResource MaterialDesignSwitchToggleButton}" ToolTip="MaterialDesignSwitchToggleButton" IsChecked="False" />-->
      </StackPanel>

      <DataGrid x:Name="gridContainer" Margin="5 5 5 5" Padding="10" Height="380"
                  ItemsSource="{Binding ContainerTable , Mode=TwoWay}" 
                  SelectedItem="{Binding SelectedContainer, Mode=TwoWay}"
                  AutoGenerateColumns="False" 
                  CanUserAddRows="False" CanUserDeleteRows="False" 
                  >
         <DataGrid.Columns>
            <DataGridTextColumn Header="ID" Binding="{Binding Path=Id}"  />
            <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}"/>
            <DataGridTextColumn Header="Capacity" Binding="{Binding Path=Capacity}"/>
            <DataGridTextColumn Header="UnitType" Binding="{Binding Path=UnitType}"/>
            <DataGridTextColumn Header="Available" Binding="{Binding Path=Available}"/>
            <DataGridTemplateColumn Header="">
               <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                     <Button Width="20" Height="20" Margin="0"
                                Command="{Binding Path=DataContext.EditContainerCommand, 
                                RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}"
                                Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" >
                        <materialDesign:PackIcon Kind="Pencil" Height="10" Width="10" />
                     </Button>
                  </DataTemplate>
               </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

            <DataGridTemplateColumn Header="">
               <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                     <Button Width="20" Height="20"  Margin="0"
                                Command="{Binding Path=DataContext.DeleteContainerCommand, 
                                RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}"
                                Style="{StaticResource MaterialDesignFloatingActionMiniButton}" >
                        <materialDesign:PackIcon Kind="Close" Height="10" Width="10" />
                        <Button.Background>
                           <SolidColorBrush Color="{StaticResource RedPrimary700}" />
                        </Button.Background>
                     </Button>
                  </DataTemplate>
               </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
         </DataGrid.Columns>
      </DataGrid>

      <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth4" Padding="10">
         <Grid>
            <Grid.ColumnDefinitions>
               <ColumnDefinition Width="*"/>
               <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
               <RowDefinition Height="*"/>
               <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Column="0">

               <TextBox x:Name="Id" Visibility="Collapsed"  Margin="10 5" materialDesign:HintAssist.Hint="Id"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
               <TextBox x:Name="Name"  Margin="10 5" materialDesign:HintAssist.Hint="Name"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
               <TextBox x:Name="Capacity"  Margin="10 5" materialDesign:HintAssist.Hint="Capacity"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Capacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Left" Width="500" >


               <TextBox x:Name="UnitType"  Margin="10 5" materialDesign:HintAssist.Hint="UnitType"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding UnitType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
               <TextBox x:Name="Available"  Margin="10 5" materialDesign:HintAssist.Hint="Available"  Style="{StaticResource MaterialDesignFloatingHintTextBox}" Text="{Binding Available, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            </StackPanel>

            <StackPanel Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="0 15">
               <Button Margin="10 5" IsDefault="True" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Command="{Binding AddUpdateContainerCommand}" >
                  <materialDesign:PackIcon Kind="Tick" Height="24" Width="24" />
               </Button>
               <Button  Command="{Binding DeleteContainerCommand}" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" >
                  <materialDesign:PackIcon Kind="Delete" Height="24" Width="24" />
               </Button>
            </StackPanel>
         </Grid>
      </materialDesign:Card>
   </StackPanel>
</UserControl>