<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZ
        WiAHzgACAAkABgAxAABhY3NwTVNGVAAAAABJRUMgc1JHQgAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLUhQ
        ICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAA
        ADNkZXNjAAABhAAAAGx3dHB0AAAB8AAAABRia3B0AAACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAA
        ABRiWFlaAAACQAAAABRkbW5kAAACVAAAAHBkbWRkAAACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAA
        ACRsdW1pAAAD+AAAABRtZWFzAAAEDAAAACR0ZWNoAAAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAA
        CAxiVFJDAAAEPAAACAx0ZXh0AAAAAENvcHlyaWdodCAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29t
        cGFueQAAZGVzYwAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2
        LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAA
        AAAAAPNRAAEAAAABFsxYWVogAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAA
        AAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3
        LmllYy5jaAAAAAAAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQg
        UkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdC
        IGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJl
        bmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBW
        aWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZp
        ZXcAAAAAABOk/gAUXy4AEM8UAAPtzAAEEwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAo8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAK
        AA8AFAAZAB4AIwAoAC0AMgA3ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCf
        AKQAqQCuALIAtwC8AMEAxgDLANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFF
        AUwBUgFZAWABZwFuAXUBfAGDAYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIv
        AjgCQQJLAlQCXQJnAnECegKEAo4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNm
        A3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTw
        BP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbR
        BuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQ
        CSUJOglPCWQJeQmPCaQJugnPCeUJ+woRCicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuw
        C8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZDPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62
        DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxIm
        EkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYD
        FiYWSRZsFo8WshbWFvoXHRdBF2UXiReuF9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpR
        GncanhrFGuwbFBs7G2MbihuyG9ocAhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8T
        Hz4faR+UH78f6iAVIEEgbCCYIMQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRN
        JHwkqyTaJQklOCVoJZclxyX3JicmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoC
        KjUqaCqbKs8rAis2K2krnSvRLAUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1
        MGwwpDDbMRIxSjGCMbox8jIqMmMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbp
        NyQ3YDecN9c4FDhQOIw4yDkFOUI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4g
        PmA+oD7gPyE/YT+iP+JAI0BkQKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXe
        RiJGZ0arRvBHNUd7R8BIBUhLSJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4l
        Tm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3
        V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBX
        YKpg/GFPYaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpI
        ap9q92tPa6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTM
        dSh1hXXhdj52m3b4d1Z3s3gReG54zHkqeYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/l
        gEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuW
        i/yMY4zKjTGNmI3/jmaOzo82j56QBpBukNaRP5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfg
        mEyYuJkkmZCZ/JpomtWbQpuvnByciZz3nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTH
        pTilqaYapoum/adup+CoUqjEqTepqaocqo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJL
        ssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfguFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBw
        wOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83
        z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i
        3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T85YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO60
        70DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t
        ////2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSop
        GR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCj/wgARCAEiAcIDASIAAhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAA
        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
        9CnN0xfqmHWUdSoND0Ye7TAiuH+nhAKF0dcSnIDlQLlzig6a1G67d8XvSvVkE8rXMrBA61GuavZ++Giy
        HIWKk4t4A71HyUL1G1QguYwKJzWKMPDg/cLu1NOso6lCgRoR+aZHMl7P36f/AAcHC8c0O749R+BVK7Np
        9q8+Ku1D9qP45XlgfVC+2cxOAgMXvjxwQM339eGF9V4S/Wn/ABiNdyMuzXeBFfBqKL3LnoBMk7BWMp19
        lfM6+aR8cjsViFzUu1j96BWR2pcP5jWhvJ9lGy/jWhsjmaFy+dSO6f5tX+w+qUIL0Iaxbe60I1pO1Qm6
        zKh5mdv3ozul+9f5ijPbpQzW6/SgcU6fqgjN/NqMxObqcJ7PzQmBDf7v+f8A4HCXVqXV/wC+H//aAAwD
        AQACAAMAAAAQCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
        CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCFCNCCCCCCCCCCCCCCC
        CCCCCCCCCCCO/wCAggggggggggggggggggggggggh+dbgggggggggggggggggggggggggvePeggggggg
        ggggggggggggggggggp056AggggggggggggggggggggiRgSjiHSTnQgggggggggggggggggp168RaRXb
        ZcRSggggggggggggggggleyzUecYQW7VQggggggggggggggggpQQg0UU28UiwggggggggggggggggggC
        RT176yS04TAgggggggggggggggosoggggggggggggggggggggggggggggggggggggggggggggggggggg
        gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg
        ggggv//EAB0RAQACAwADAQAAAAAAAAAAAAEAESExQBBBcID/2gAIAQMBAT8Q+BaiENV1ALY3jr6rqQLw
        ShgmjqGcDJ7fGa+olt6iO5tIAo/F/wD/xAAkEQACAQMDBAMBAAAAAAAAAAAAAREQITFAQVFhgbHwcHHR
        4f/aAAgBAgEBPxD4CQktCG0S+hDENU24UbCLZUmPuNU/i+TFhEtjBXNz5e/ZYID11TmuY8HYY6Ln39ox
        jYVu7/nnVKuFL9ePdxzZZ26DqyHX8F/CtNFIrECQ6Ro0iRUyyYGJGB0i+iRA3tWCRiRPAlA7aJOCaSSN
        iG7jdJ0cEEEIhFhMUblixb4c/8QAKxABAAEDAwMEAgICAwAAAAAAAREAITFBUWFxgZEQUKGxwfAg4dHx
        QICQ/9oACAEBAAE/EP8Awe26zLnoa0Ivgv4KYZLsCizK3dQcqJKWG57pM7oNOvnilDBq6dNv4Rbn5Kfn
        3O+pHd2b9aVVVlbq6/xg3h9nuRgTGxu6FLOTI6vrJGKZdnyiaWVUBWben7jc9yQJs67H9+sg4N/mKxM0
        Wv8AT7X1R0weT/XuQZdPynooRUBlaLBDan9YKVVVlbq6+sXLynQsfn3KBjQeif5PRlE5P7SX9zUvgeg9
        Wc3idjVoKIMOh7l/R6LnzTKwW4/o5rnMM307PVCFRgAlWpQSK5t267+6N0B0AtLdX3TOWQyuVaS8S6XE
        a1cvgq2jBfL22rC8EToZe6NQGCu/oEu/fiGWbHywb05u40qUx6FLLP8AAq8SQWsg+zCI2CQPzfPlQwKc
        HPqqfqnGW42QFUcSVqewGPwhq/mpBECiHK8InGszTEsDLk4VQpiDVAgsho+hXRgwG6uKEuwTHyc9hpcC
        YYu3kA9JojR8QlChUfgCV8U2oTI08Orl5abNGXdCzoQd2jieSCNwLxywUoDsKWOYM/mgc+ZkTCULKluI
        YB0ku9Q3qwTZOhb+LvZHRkegBdV2oTSZJ3ezZ5bVbFulGv8AEyrAFNZboBuvlSpCrrti+TV5X1192q99
        PpWjFwXVgNVowUJWBs/Ye0UvLEsgDdLDrV5FJJUj04ptlaS0AR5nzTw6mJuRPkw7tfdMUCtBcNMyW7ax
        mkYlKEbq+k+KGolRLVhY5VO7wcDABPQKcueHRPxQuFtXB8GpwnppoCUJ8ewpxBbdDHQUXsq7i7R9QWOS
        ZG/BwFLl0jDHCzHakKiMTfO22YO1JnPDqv41WiSK5vGF2aDgZpBB4dVikZBwj+SWwdCpJEVbhryPjFIF
        CTiTXeVwGrQfXRLK8jlRgjam3wjV4FzS2b9K5AtCZidWWV9DDDu9j30D5dKbflSMyw7rOrNr2omCc6+h
        Yr4C3mTc47b1mlMqINpDyDxTBsLbnF/Wm9IVsQSXjyePYQlsDgAX7WtLMc0SujyDIWNmJHmoSwtrDuVh
        88Vw8pbRBoG1AIX2ClnkZ2Lb0nzF80rdgj5omXSYzK2jMIA2WjYySS6+fhg+fQTlpKTgEBlHDmgilsWP
        FmP9n8LmCgkn2OGmtOwWQLwjnsFNHwHbbGh8utMyQAEquAKgPgyYcxgg1DotMA7FA4t+xHa9EBebZUkR
        xQiER5jZeQw4ltmNwYVN26mxdWrz90l3unV9haK2cQAfA9/TWdasFoCrVwm3WgbNDXOMtkhi9JfC+sAh
        BwKVXtHLahkHf0coQBKrgDenqQEgMyN73000qCazgXmBHBPcqTWNRwE0ExTG5OGNWFv1Zq/OEgbrRoqD
        yjgDVq2+5zcvPPTS96UyGPYF7pJ4H1cswASpwBq1MGwLfXjzq+NPYlR02M2sO6w9nSlYgYEcwD/DQ4NZ
        g/WCokaBXN2bvrBw+i7PPAUk4kKY+0KC/Dh6lLqduQHBuunko69gDOZw2MFLcmmkbpGI0cRQ0St08xVi
        lIi2j4bryvtFBKG9qeXn9gjAVcEacIfZQ6JkoRE6kSLnNF5yhTrlu9hoOkNEITyDRzl+PQctoUwmvCWS
        k4oYEckD+6aH8xHmYfE0JlYSOjcvLtHsgphTo0qt1ev8G4DcMcUssrL6DGLUq5V9IyYQHkTQqC5btRCX
        R8B+T+QUwp0ab3b+0ZxSISiG6RUxbP1lrFl2D81Tl7Oc+KKYOcE+RXzCP5WoF8xpvqm81P0muDei4UZ5
        J7aZlD2PKiAmT9NaO3pwNQrp4VJ1scT90c75/h6ho9I+xUND9vsyoyUdJviZqx3AuewJgTL9o0UzJaAv
        waI8RR7wpwG3C0uyUsnVU/FNoTt9gNS5i0l8CKMZPm990XLC6goliPJApPz+461NT0J+CmyU2U/VDVCk
        0sezkAQyGzUWhPmCZKskFiLObUTh2FxoJmDsVC+saRy91gihqfo80ZI7UC/FEnxhSe8CfVIwzbsaBCV3
        oFDjH4QV1PkB3S/8+LHgUWILHFq/2Ff7Cpd3z6RUVH/ev//Z
</value>
  </data>
</root>